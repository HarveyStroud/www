
<%-- :mode=jsp: --%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://flowplayer.org" prefix="f" %>

<c:set var="tools" value="all" />
<%@ include file="../standalone.jsf" %>

<!-- tab styling -->
<link rel="stylesheet" type="text/css" href="${cdn}${jqt}/css/tabs-flowplayer-v2.css"/>

<style>
<c:set var="css">
/* override the root element to enable scrolling */
#flowpanes {
	position:relative;
	overflow:hidden;
	clear:both;
}

/* override single pane */
#flowpanes div {
	float:left;
	display:block;
	width:670px;
	cursor:pointer;
	font-size:14px;
}

/* our additional wrapper element for the items */
#flowpanes .items {
	width:20000em;
	position:absolute;
	clear:both;
	margin:0;
	padding:0;
}

#flowpanes .less, #flowpanes .less a {
	color:#999 !important;
	font-size:11px;
}
</c:set>

${css}
</style>

<c:set var="html">
<!-- tabs work as navigator for scrollable -->
<ul id="flowtabs">
	<li><a id="t1" href="#story">The Story</a></li>
	<li><a id="t2" href="#features">Features</a></li>
	<li><a id="t3" href="#plugins">Plugins</a></li>
	<li><a id="t4" href="#demos">Demos</a></li>
</ul>
</c:set>

${html}

<!-- panes -->
<div id="flowpanes">


	<!-- wrapper for scrollable items -->
	<div class="items">

		<div>

			<h2>Forget about scrollbars</h2>

			<img src="${cdn}/img/title/eye192.png" alt="Flying screens" style="float:right;margin:0 0 20px 20px" />

			<p>
				The purpose of this library is to make it extremely easy to add scrolling functionality to a website. Whenever you wish to scroll HTML elements in a visually-appealing manner, this is the only library you need. The main design goals of this library are to provide <em>visual customization</em> functionality and <em>programmability</em>. Here are some example scenarios where you would benefit from using the library:
			</p>

			<ul>
				<li>Home pages, like this one right here</li>
				<li>Product catalogues</li>
				<li>News tickers</li>
				<li>Custom select boxes in forms</li>
				<li>Image galleries</li>
				<li>Video playlists</li>
				<li>All kinds of navigational systems</li>
			</ul>

			<p>
				The first version of the library was released on January 3, 2008. Since then, this tool has come a long way and it is now a stable and mature product.
			</p>

			<br clear="all" />

		</div>

		<div>


			<h2>Rich yet simple</h2>

			<ul style="font-size:12px">
				<li>Horizontal and vertical scrolling.</li>
				<li>Scrolling using navigational buttons, API calls, keyboard arrow keys, and the mouse scroll wheel.</li>
				<li>The number of items scrolled at once is customizable.</li>
				<li>The navigational buttons are setup without a single line of JavaScript.</li>
				<li>Tabbed navigation like this one can be setup without any programming.</li>
				<li>Programmatic actions are available, such as: <samp>next</samp>, <samp>prev</samp>, <samp>nextPage</samp>, <samp>prevPage</samp>, <samp>seekTo</samp>, <samp>begin</samp>, and <samp>end</samp>.</li>
				<li>Dynamic addition and removal of Scrollable items.</li>
				<li>The ability to customize the scrolling experience with <samp>onBeforeSeek</samp> and <samp>onSeek</samp> listeners.</li>
			</ul>

			<%@ include file="${jqt}/common-features.jsf" %>

		</div>

		<div>

		  	<div style="margin: 30px 0 0 50px; width: 500px;">
				<h2>Extendable architecture</h2>

				<p>
					Just like other tools this tool can be extended with plugins. Currently available plugins include:
				</p>

				<ul>
					<li><a href="${jqt}/scrollable.html#circular">circular</a> &nbsp; makes an infinite loop from the Scrollable items so they continue cycling back to the beginning once the last item is reached.</li>
					<li><a href="${jqt}/scrollable.html#autoscroll">autoscroll</a> &nbsp; makes the scrolling behaviour automatic and is highly configurable.</li>
					<li><a href="${jqt}/scrollable.html#navigator">navigator</a> &nbsp; provides navigation buttons for switching between pages in Scrollable.</li>
					<li><a href="${jqt}/scrollable.html#mousewheel">mousewheel</a> &nbsp; enables mousewheel support for Scrollable.</li>
				</ul>


				<p>
					You can also write <a href="${jqt}/using.html#plugins">your own plugins</a>. Another way to alter the default behaviour is the ability to make your <a href="${jqt}/demos/scrollable/easing.html">own animation effects</a>. There is lots of room for experimentation!
				</p>

			</div>

		</div>

		<div class="narrow">

			<div style="margin:0 0 0 50px; width: 500px;">
				<h2>Look at the first demo to get started</h2>

				<p>
					You can study the workings of Scrollable in the following examples. They contain documented source code, along with a standalone page to allow you to easily transfer the examples to your own site. The most important example is the first one, "Minimal setup for Scrollable" because it teaches you the basics of using the library.
				</p>

				<ul>
					<c:forEach items="${f:getDemo(context.toolDemos, 'scrollable/index.html').category.demos}" var="demo">
						<li> <a href="${jqt}/demos/${demo.path}">${demo.title}</a> </li>
					</c:forEach>
				</ul>
			</div>

		</div>

	</div>

</div>

<p style="text-align:center;width:700px">
	<button class="custom prev">&laquo; Previous</button>
	<button class="custom next">Next &raquo;</button>
</p>

<!-- activate tabs with JavaScript -->
<script>
<c:set var="js">
// wait until document is fully scriptable
$(document).ready(function() {

	// select #flowplanes and make it scrollable. use circular and navigator plugins
	$("#flowpanes").scrollable({size: 1}).circular().mousewheel(400).navigator({

		// select #flowtabs to be used as navigator
		navi: "#flowtabs",

		// select A tags inside the navigator to work as items (not direct children)
		naviItem: 'a',

		// assign "current" class name for the active A tag inside navigator
		activeClass: 'current'

	});
});
</c:set>

${js}
</script>

